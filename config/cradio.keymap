// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
// #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        Backspace {
            bindings = <&kp BSPC>;
            key-positions = <7 8>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <21 22>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T         &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G         &kp H        &kp J  &kp K      &kp L    &kp SQT
&kp Z  &kp X  &kp C  &kp V  &kp B         &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 1  &kp RSHIFT    &lt 4 SPACE  &mo 2
            >;
        };

        right_layer {
            bindings = <
&trans      &trans        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans    &trans  &trans     &trans  &trans  &trans
&sk LCTRL   &sk LEFT_ALT  &sk LEFT_COMMAND   &sk LEFT_SHIFT   &trans    &trans  &trans     &trans  &trans  &kp BACKSPACE
&kp ESCAPE  &trans        &trans             &kp TAB          &trans    &trans  &kp ENTER  &trans  &trans  &kp DELETE
                                             &trans           &trans    &trans  &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCL       &kp AT            &kp HASH          &kp DOLLAR         &kp PERCENT       &kp CARET  &kp AMPERSAND  &kp ASTERISK       &kp LPAR       &kp RIGHT_PARENTHESIS
&kp GRAVE      &kp TILDE         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp SEMICOLON     &kp COLON  &sk RSHIFT     &sk RIGHT_COMMAND  &sk RIGHT_ALT  &sk RCTRL
&kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE    &kp PIPE   &kp MINUS      &kp EQUAL          &kp PLUS       &kp BACKSLASH
                                                   &trans             &trans            &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &kp N7  &kp N8  &kp N9  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &kp N4  &kp N5  &kp N6  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &kp N0  &kp N1  &kp N2  &kp N3  &trans
                             &trans      &trans          &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans
                        &trans  &trans    &trans    &trans
            >;
        };
    };
};
