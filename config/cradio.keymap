// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
// #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

&mt { tapping-term-ms = <300>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo-escape {
            bindings = <&kp ESC>;
            key-positions = <11 12>;
        };

        combo-backspace {
            bindings = <&kp BSPC>;
            key-positions = <8 7>;
        };

        combo-tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        combo-enter {
            bindings = <&kp ENTER>;
            key-positions = <18 17>;
        };

        combo-alt {
            bindings = <&kp RALT>;
            key-positions = <21 22>;
            timeout-ms = <5>;
        };

        combo-meta-layer {
            bindings = <&mo 3>;
            key-positions = <31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q               &kp W  &kp E  &kp R             &kp T    &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S  &kp D  &kp F             &kp G    &kp H        &kp J  &kp K      &kp L    &mt RCTRL COLON
&mt LEFT_SHIFT Z    &kp X  &kp C  &kp V             &kp B    &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
                                  &kp LEFT_COMMAND  &mo 1    &lt 4 SPACE  &mo 2
            >;
        };

        layer-control {
            bindings = <
&kp EXCLAMATION   &kp AT_SIGN  &kp HASH   &kp DOLLAR        &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_CONTROL  &kp GRAVE    &kp TILDE  &kp SEMICOLON     &trans         &trans     &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE
&kp LSHIFT        &trans       &trans     &trans            &trans         &trans     &trans          &trans        &trans                &trans
                                          &kp LEFT_COMMAND  &trans         &trans     &trans
            >;
        };

        right-thumb {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0
&trans          &trans        &trans        &trans        &trans          &trans        &kp MINUS      &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans          &kp PIPE      &kp BACKSLASH  &trans        &trans            &kp RSHIFT
                                            &trans        &trans          &trans        &trans
            >;
        };

        meta {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans             &trans           &trans  &sys_reset
&trans        &trans        &trans        &trans        &trans          &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &bootloader
&trans        &trans        &trans        &trans        &trans          &trans      &trans             &trans           &trans  &trans
                                          &trans        &trans          &trans      &trans
            >;
        };

        layer-arrow {
            bindings = <
&trans      &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans
&kp LCTRL   &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp SQT
&kp LSHIFT  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &kp RSHIFT
                            &trans  &trans    &trans    &trans
            >;
        };
    };
};
