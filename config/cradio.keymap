// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
// #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 1>;
            then-layer = <2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo-escape {
            bindings = <&kp ESC>;
            key-positions = <1 0>;
        };

        combo-backspace {
            bindings = <&kp BSPC>;
            key-positions = <8 9>;
        };

        combo-tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        combo-enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        combo-alt {
            bindings = <&kp RALT>;
            key-positions = <21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R             &kp T        &kp Y        &kp U       &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F             &kp G        &kp H        &kp J       &kp K      &kp L    &kp COLON
&kp Z  &kp X  &kp C  &kp V             &kp B        &kp N        &kp M       &kp COMMA  &kp DOT  &kp SLASH
                     &kp LEFT_COMMAND  &kp LCTRL    &lt 1 SPACE  &kp RSHIFT
            >;
        };

        right-thumb {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9       &kp NUMBER_0
&kp GRAVE       &kp TILDE     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS       &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT          &kp SEMICOLON
&kp LEFT_SHIFT  &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL       &kp PIPE      &kp BACKSLASH  &kp SQT       &kp DOUBLE_QUOTES  &kp RSHIFT
                                                &trans             &trans          &trans        &trans
            >;
        };

        tri_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans             &trans           &trans  &sys_reset
&trans        &trans        &trans        &trans        &trans          &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &bootloader
&trans        &trans        &trans        &trans        &trans          &trans      &trans             &trans           &trans  &trans
                                          &trans        &trans          &trans      &trans
            >;
        };
    };
};
